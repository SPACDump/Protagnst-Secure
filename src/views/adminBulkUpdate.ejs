<!DOCTYPE html>
<html lang="en">

<head>
    <%- include('components/header', { title: 'Bulk Update' }) %>
        <link rel="stylesheet" href="../public/css/main.css">
</head>

<body>
    <div id="error">
        <div class="error err-fix">
            <h1 class="fancy-header">Bulk Update</h1>
            <p class="text-secondary mb-3">Input Submission IDs here to bulk-update.</p>

            <form onSubmit="event.preventDefault(); return handleBulkUpdate();">
                <div class="form-label-group">
                    <p class="text-start mb-1 text-secondary">Submission IDs <span class="text-danger">*</span></p>
                    <input type="text" id="subids" class="form-control mb-2" placeholder="Submission IDs" name="subids"
                        required>
                    
                    <p class="text-start mb-1 text-secondary">Status Update <span class="text-danger">*</span></p>
                    <select class="form-select mb-2" id="action" required>
                        <option></option>
                        <option value="accept">Accept</option>
                        <option value="deny">Deny</option>
                        <option value="pending">Pending</option>
                    </select>
                </div>
                <button class="btn btn-lg btn-primary text-white btn-block w-100" type="submit" id="btnSubmit">Bulk Update</button>
            </form>

            <div id="btnToolbar" class="btn-toolbar mt-4 mb-1" style="justify-content: center; display: flex;">
                <button type="button" id="btnSubmit" class="btn btn-primary btn-md me-2"
                    onclick="window.location.href = 'javascript:history.back()';"><i class="fa-solid fa-left-long"></i> Go Back</button>
                <button type="button" id="btnSubmit" class="btn btn-primary btn-md me-2"
                    onclick="window.location.href = '/support';"><i class="fa-solid fa-phone"></i> Contact Support</button>
            </div>

            <p class="mt-1 text-secondary text-center fs-6">
                &copy; Protagnst Media LLC / Blaze Productions LLC 2022
            </p>
        </div>
    </div>

    <div class="position-fixed bottom-0 end-0 p-3" style="z-index: 11">
        <div class="toast align-items-center text-white bg-danger border-0" role="alert" aria-live="assertive"
            aria-atomic="true" id="liveToast">
            <div class="d-flex">
                <div class="toast-body">
                    There was an error processing your request.
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"
                    aria-label="Close"></button>
            </div>
        </div>
    </div>

    <div class="position-fixed bottom-0 end-0 p-3" style="z-index: 11">
        <div class="toast align-items-center text-white bg-success border-0" role="alert" aria-live="assertive"
            aria-atomic="true" id="successToast">
            <div class="d-flex">
                <div class="toast-body">
                    Welcome home.
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"
                    aria-label="Close"></button>
            </div>
        </div>
    </div>

    <%- include('components/loader') %>
</body>

<script>
    async function handleBulkUpdate() {
        const subids = document.getElementById("subids").value;
        const action = document.getElementById("action").value;
        $('#btnSubmit').prop('disabled', true);

        const subidsArray = subids.split(",");
        const subidsArrayUnique = [...new Set(subidsArray)];

        $.ajax({
            url: `/api/admin/${action}/` + subidsArrayUnique,
            type: 'POST',
            data: { 'ahM9WEXF79G': true, subidsArrayUnique },

            success: function (data) {
                if (data.error) {
                    document.getElementById('btnSubmit').disabled = false;

                    let error = 'There was an error processing your request. Please try again later.';
                    if (data.error) error = data.error;
                    return showErrorToast('liveToast', error);
                } else if (data.success) {
                    let message = `Successfully updated ${subidsArrayUnique.length} submissions.`;
                    if (data.message) message = data.message;
                    showSuccessToast('successToast', message);
                    setTimeout(() => {
                        window.location.href = '/admin/update';
                    }, 2000);
                }
            },
            error: function (data) {
                document.getElementById('btnAccept').disabled = false;
                document.getElementById('btnDeny').disabled = false;

                return showErrorToast('liveToast', 'There was an error processing your request. Please try again later.');
            }
        });

        // fetch("/api/admin/toggleBanStatus?isFromServer=reLi3NK5asd6", {
        //     method: "POST",
        //     headers: {
        //         "Content-Type": "application/json",
        //     },
        //     body: JSON.stringify({
        //         userid,
        //     }),
        // })
        //     .then((res) => res.json())
        //     .then(async (data) => {
        //         if (data.error) {
        //             $('#btnSubmit').prop('disabled', false);
        //             let error = "There was an error processing your request.";
        //             if (data.error) error = data.error;

        //             showErrorToast('liveToast', error);
        //             return false;
        //         } else if (data.success) {
        //             await showSuccessToast('successToast', data.message);
        //             await sleep(3000);
        //             window.location.href = "/admin/ban";
        //         } else {
        //             showErrorToast('liveToast', "There was an error processing your request.");
        //             return false;
        //         }
        //     });
    }

    function sleep(ms) {
        return new Promise(resolve => setTimeout(resolve, ms));
    }

    function showErrorToast(toastId, errormsg) {
        var toastLiveExample = document.getElementById(toastId)
        var toast = new bootstrap.Toast(toastLiveExample)
        toastLiveExample.querySelector('.toast-body').innerText = errormsg;
        toast.show();
    }

    function showSuccessToast(toastId, errormsg) {
        var toastLiveExample = document.getElementById(toastId)
        var toast = new bootstrap.Toast(toastLiveExample)
        toastLiveExample.querySelector('.toast-body').innerText = errormsg;
        toast.show();
    }
</script>

</html>