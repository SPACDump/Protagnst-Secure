<!DOCTYPE html>
<html lang="en">

<head>
    <%- include('components/header', { title: 'Create Form' }) %>
        <link rel="stylesheet" href="../public/css/main.css">
</head>

<body>
    <div id="error">
        <div class="error err-fix">
            <h1 class="fancy-header-small">Create Question</h1>
            <p class="text-secondary mb-3">Use this form to add a question to an existing form.</p>

            <form onSubmit="event.preventDefault(); return handleNewQuestionCreate();">
                <div class="form-label-group">
                    <p class="text-start mb-1 text-secondary">Form ID <span class="text-danger">*</span></p>
                    <select class="form-select mb-2" id="formid" required>
                        <option></option>
                    </select>

                    <p class="text-start mb-1 text-secondary">Question Short ID <span class="text-danger">*</span></p>
                    <input type="text" id="qshort" class="form-control mb-2" name="qshort" placeholder="The short ID of this question, e.g. AGE, MCIGN or WHYJOIN" required></textarea>

                    <p class="text-start mb-1 text-secondary">Question Type <span class="text-danger">*</span></p>
                    <select class="form-select mb-2" id="qtype" required>
                        <option></option>
                        <option value="text">Text</option>
                        <option value="textarea">Text Area (Paragraph)</option>
                        <option value="select">Select Menu</option>
                    </select>

                    <p class="text-start mb-1 text-secondary">Question Text <span class="text-danger">*</span></p>
                    <input type="text" id="qtext" class="form-control mb-2" placeholder="The actual question" name="qtext" required>

                    <p class="text-start mb-1 text-secondary">Question Data</span></p>
                    <textarea class="form-control mb-2" name="qdata" id="qdata" placeholder="NOT REQUIRED&#10;Split select menu options with '>>'"></textarea>
                </div>

                <button class="btn btn-lg btn-primary text-white btn-block w-100" type="submit" id="btnSubmit">Create
                    new form</button>
            </form>

            <p class="mt-5 mb-3 text-secondary text-center fs-6">
                <button class="btn btn-lg btn-primary text-white btn-block w-100 mb-3"
                    onclick="window.location.href = 'javascript:history.back()';"><i class="fa-solid fa-left-long"></i>
                    Go back</button>
                &copy; Protagnst Media LLC / Blaze Productions LLC 2022
            </p>
        </div>
    </div>

    <div class="position-fixed bottom-0 end-0 p-3" style="z-index: 11">
        <div class="toast align-items-center text-white bg-danger border-0" role="alert" aria-live="assertive"
            aria-atomic="true" id="liveToast">
            <div class="d-flex">
                <div class="toast-body">
                    There was an error processing your request.
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"
                    aria-label="Close"></button>
            </div>
        </div>
    </div>

    <div class="position-fixed bottom-0 end-0 p-3" style="z-index: 11">
        <div class="toast align-items-center text-white bg-success border-0" role="alert" aria-live="assertive"
            aria-atomic="true" id="successToast">
            <div class="d-flex">
                <div class="toast-body">
                    Welcome home.
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"
                    aria-label="Close"></button>
            </div>
        </div>
    </div>

    <%- include('components/loader') %>
</body>

<script>
    $(document).ready(async function () {
        let dat = await fetch("/api/dev/getAllForms?isFromServer=ixwAW5LXGTjgG", {
            method: "GET",
        }).then((res) => res.json())

        dat.forEach(function (form) {
            $('#formid').append(`<option value="${form.id}">#${form.id}: ${form.form_name}</option>`);
        });
    });

    async function handleNewQuestionCreate() {
        let formId = $('#formid').val();
        let questionShort = $('#qshort').val();
        let questionType = $('#qtype').val();
        let questionText = $('#qtext').val();
        let questionData = $('#qdata').val();

        $('#btnSubmit').prop('disabled', true);

        fetch("/api/dev/createNewQuestion?isFromServer=QAhjCCfzedT4Yh", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify({
                formId,
                questionShort,
                questionType,
                questionText,
                questionData
            }),
        })
            .then((res) => res.json())
            .then(async (data) => {
                if (data.error) {
                    $('#btnSubmit').prop('disabled', false);
                    let error = "There was an error processing your request.";
                    if (data.error) error = data.error;

                    showErrorToast('liveToast', error);
                    return false;
                } else if (data.success) {
                    await showSuccessToast('successToast', data.message);
                    await sleep(3000);
                    window.location.href = "/developer/question";
                } else {
                    showErrorToast('liveToast', "There was an error processing your request.");
                    return false;
                }
            });
    }

    function sleep(ms) {
        return new Promise(resolve => setTimeout(resolve, ms));
    }

    function showErrorToast(toastId, errormsg) {
        var toastLiveExample = document.getElementById(toastId)
        var toast = new bootstrap.Toast(toastLiveExample)
        toastLiveExample.querySelector('.toast-body').innerText = errormsg;
        toast.show();
    }

    function showSuccessToast(toastId, errormsg) {
        var toastLiveExample = document.getElementById(toastId)
        var toast = new bootstrap.Toast(toastLiveExample)
        toastLiveExample.querySelector('.toast-body').innerText = errormsg;
        toast.show();
    }
</script>

</html>